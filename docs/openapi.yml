openapi: 3.0.3

info:
  title: Emoine_R
  version: 1.0.0
  description: Emoine_R API
  license:
    name: MIT

servers:
  - url: "https://emoine.trap.jp/"
    description: production
  - url: "https://emoine-r-dev.trapti.tech"
    description: staging
  - url: "http://localhost:8090/"
    description: local

paths:
  "/oauth2/callback":
    parameters:
      - name: code
        in: query
        required: true
        description: OAuth2.0のcode
        schema:
          type: string
      - $ref: "#/components/parameters/sessionsInCookie"

    get:
      tags:
        - oauth2
      summary: OAuthのコールバック先
      operationId: callback
      responses:
        "200":
          description: OK
        "302":
          description: Found

  "/oauth2/generate/code":
    get:
      tags:
        - oauth2
      summary: Code Challenge用Codeの生成
      responses:
        "200":
          description: OK

  "/meeting":
    post:
      operationId: createMeeting
      summary: 新しい集会の設定
      description: 新しい集会を設定します。権限者のみ
      tags:
        - meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMeetingRequest"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Meeting"
        "403":
          description: Forbidden

    get:
      parameters:
        - $ref: "#/components/parameters/limitInQuery"
        - $ref: "#/components/parameters/offsetInQuery"
      operationId: getAllMeetings
      summary: 全集会の取得
      description: すべての集会を取得する
      tags:
        - meeting
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MeetingsWithTotal"

  "/meeting/{meetingId}":
    parameters:
      - $ref: "#/components/parameters/meetingIdInPath"
    get:
      operationId: getMeeting
      summary: meetingIdの集会情報の取得
      description: meetingIdの集会情報を取得する
      tags:
        - meeting
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Meeting"
        "404":
          description: Not Found

    patch:
      operationId: updateMeeting
      summary: 集会のdescriptionを変更
      description: 集会のdescriptionを変更します。権限者のみ
      tags:
        - meeting
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateMeetingRequest"
      responses:
        "204":
          description: |-
            No Content
            正常に更新できました。
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found
    delete:
      operationId: deleteMeeting
      summary: 集会を削除
      tags:
        - meeting
      responses:
        "204":
          description: |-
            No Content
            正常に削除できました。
        "403":
          description: Forbidden
        "404":
          description: Not Found

  "/meeting/{meetingId}/comments":
    parameters:
      - $ref: "#/components/parameters/meetingIdInPath"
    get:
      operationId: getComment
      summary: 集会のコメント一覧を取得
      description: 集会のコメント一覧を取得する
      tags:
        - comment
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Comment"
        "404":
          description: Not Found

  "/meeting/{meetingId}/reactions":
    parameters:
      - $ref: "#/components/parameters/meetingIdInPath"
    get:
      operationId: getReaction
      summary: 集会のリアクション一覧を取得
      description: 集会のリアクション一覧を取得する
      tags:
        - reaction
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reaction"
        "404":
          description: Not Found

  "/meeting/{meetingId}/tokens":
    parameters:
      - $ref: "#/components/parameters/meetingIdInPath"
    get:
      operationId: getMeetingTokens
      summary: 集会のトークン一覧を取得
      description: 集会のトークン一覧を取得する (管理者権限が必要)
      tags:
        - token
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Token"
        "404":
          description: Not Found

  "/token":
    post:
      operationId: createToken
      summary: アクセストークンの生成
      description: アクセストークンの生成をします。
      tags:
        - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateToken"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        "403":
          description: Forbidden

    get:
      operationId: getAllTokens
      summary: 全トークン情報を取得
      description: 全トークン情報を取得する。
      tags:
        - token
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Tokens"
        "403":
          description: Forbidden

  "/token/{token}":
    parameters:
      - $ref: "#/components/parameters/tokenInPath"
    get:
      operationId: getToken
      summary: トークン情報を取得
      description: トークン情報を取得する。権限者のみ
      tags:
        - token
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        "403":
          description: Forbidden
        "404":
          description: Not Found

    patch:
      operationId: patchToken
      summary: トークン情報を更新
      description: トークン情報を更新する。権限者のみ
      tags:
        - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Token"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        "400":
          description: Bad Request
        "403":
          description: Forbidden
        "404":
          description: Not Found

components:
  parameters:
    sessionsInCookie:
      name: sessions
      in: cookie
      required: false
      schema:
        type: string
    meetingIdInPath:
      name: meetingId
      in: path
      required: true
      description: Presentation ID
      schema:
        $ref: "#/components/schemas/MeetingId"
    tokenInPath:
      name: token
      in: path
      required: true
      description: Token
      schema:
        type: string

    limitInQuery:
      in: query
      name: limit
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 10
      description: 取得する件数
      example: 50
      x-oapi-codegen-extra-tags:
        query: limit

    offsetInQuery:
      in: query
      name: offset
      schema:
        type: integer
        minimum: 0
        default: 0
      description: 取得を開始する件数（0-index）
      example: 50
      x-oapi-codegen-extra-tags:
        query: offset

  schemas:
    MeetingId:
      type: string
      format: uuid

    CommentId:
      type: string
      format: uuid

    ReactionId:
      type: string
      format: uuid

    CreateToken:
      type: object
      properties:
        userId:
          type: string
        expireAt:
          type: string
          format: date-time
        meetingId:
          $ref: "#/components/schemas/MeetingId"
        description:
          type: string
      required:
        - userId
        - expireAt
        - meetingId
        - description

    Tokens:
      type: object
      properties:
        token:
          $ref: "#/components/schemas/Token"
        meeting:
          $ref: "#/components/schemas/Meeting"
      required:
        - token
        - meeting

    Token:
      type: object
      properties:
        token:
          type: string
        creatorId:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time
        expireAt:
          type: string
          format: date-time
        meetingId:
          $ref: "#/components/schemas/MeetingId"
        description:
          type: string
      required:
        - token
        - creatorId
        - userId
        - createdAt
        - expireAt
        - meetingId
        - description

    Meeting:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/MeetingId"
        videoId:
          type: string
        title:
          type: string
        thumbnail:
          type: string
        startedAt:
          type: string
          format: date-time
        endedAt:
          type: string
          format: date-time
        description:
          type: string
      required:
        - id
        - videoId
        - title
        - thumbnail
        - startedAt
        - endedAt
        - description

    MeetingsWithTotal:
      type: object
      properties:
        total:
          type: integer
        meetings:
          type: array
          items:
            $ref: "#/components/schemas/Meeting"
      required:
        - total
        - meetings

    CreateMeetingRequest:
      type: object
      properties:
        videoId:
          type: string
        description:
          type: string
      required:
        - videoId
        - description

    Comment:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/CommentId"
        userId:
          type: string
        meetingId:
          $ref: "#/components/schemas/MeetingId"
        text:
          type: string
        createdAt:
          type: string
          format: date-time
        isAnonymous:
          type: boolean
        color:
          type: string
      required:
        - id
        - userId
        - meetingId
        - text
        - createdAt
        - isAnonymous
        - color

    Reaction:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/ReactionId"
        userId:
          type: string
        meetingId:
          $ref: "#/components/schemas/MeetingId"
        stampId:
          type: string
        createdAt:
          type: string
          format: date-time
      required:
        - id
        - userId
        - meetingId
        - stampId
        - createdAt
